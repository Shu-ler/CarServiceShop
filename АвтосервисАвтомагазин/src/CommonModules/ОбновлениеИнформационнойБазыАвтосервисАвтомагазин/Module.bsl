//
//	Обновление информационной базы расширения
//	Для запуска используется расширение ДанныеРасширений версии не ниже 11.4.12.81
//	
//	Филимонов И.В.
//		+7 913 240 81 77
//		
#Область ПрограммныйИнтерфейс

// Машина запуска и анализа обработок обновления информационной базы
// 
// Параметры:
// 	Версия - Строка - версия расширения
// 	ВерсияИБ - Строка - версия информационной базы расширения
// Возвращаемое значение:
// 	
Функция ОбновлениеИнформационнойБазы(Версия, ВерсияИБ) Экспорт

	РезультатОбработок = Истина;

	РезультатОбработок = РезультатОбработок И НачальноеЗаполнение();

	Если СтрНачинаетсяС(ВерсияИБ, "0.0.2") Тогда
		РезультатОбработок = РезультатОбработок И Обновление_0_2_0_0();
	КонецЕсли;

	Результат = ?(РезультатОбработок, Версия, ВерсияИБ);

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет наличие и заполнение параметров подсистемы в хранилище общих настроек в соответствии со структурой,  
// определенной в функции КА2_КаталогАвтомобилейКлиентСервер.НастройкиКаталогаАвтомобилей(). При необходимости
// выполняет метод  СоздатьДополнительныеРеквизиты() 
// 
// Возвращаемое значение:
// 	Булево - Описание
Функция НачальноеЗаполнение() Экспорт

	ИмяПодсистемы = Метаданные.Подсистемы.АвтосервисАвтомагазин.Имя;
	КлючНастроек = СтрШаблон("%1ОсновныеНастройки", ИмяПодсистемы);
	ТребуетсяОбновлениеНастроек = Ложь;

	НастройкиКаталогаАвтомобилей = КА2_КаталогАвтомобилейКлиентСервер.НастройкиКаталогаАвтомобилей();

	СуществуютНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ИмяПодсистемы, КлючНастроек);

	Если СуществуютНастройки = Неопределено Тогда
		ТребуетсяОбновлениеНастроек = Истина;
	Иначе
		Для Каждого Подключ Из НастройкиКаталогаАвтомобилей Цикл
			ПроверяемоеЗначение = Неопределено;
			Если Не СуществуютНастройки.Свойство(Подключ.Ключ, ПроверяемоеЗначение)
				 Или Не ЗначениеЗаполнено(ПроверяемоеЗначение) Тогда
				ТребуетсяОбновлениеНастроек = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Результат = ?(ТребуетсяОбновлениеНастроек, СоздатьДополнительныеРеквизиты(ИмяПодсистемы, КлючНастроек), Истина);

	Возврат Результат;

КонецФункции

// Перенос данных из старого регистра СвязьКузовНоменклатура в справочник КА2_КлючиМоделей, регистр сведений 
// КА2_МоделиАвтомобилейДляНоменклатуры с одновременным заполнением справочников:
// 
// - КА2_Типы;
// - КА2_Марки;
// - КА2_Модели;
// - КА2_Поколения;
// - КА2_Кузова;
// - КА2_Модификации;
// - КА2_Комплектации
// 
// и очисткой регистра СвязьКузовНоменклатура
// 
// Возвращаемое значение:
// 	Булево - Описание
Функция Обновление_0_2_0_0() Экспорт

	ШаговОповещения = 50;

	УспешноПеренесено = 0;
	ВсегоПеренести = 0;
	ШагОповещения = 0;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	СвязьКузовНоменклатура.Номенклатура,
				   |	СвязьКузовНоменклатура.Характеристика,
				   |	СвязьКузовНоменклатура.Поколение,
				   |	СвязьКузовНоменклатура.КузовЛегковогоАвтомобиля,
				   |	СвязьКузовНоменклатура.Модификации,
				   |	СвязьКузовНоменклатура.Комплектации,
				   |	СвязьКузовНоменклатура.Кузова,
				   |	СвязьКузовНоменклатура.МодификацияПрочихТС,
				   |	СвязьКузовНоменклатура.Комментарий,
				   |	СвязьКузовНоменклатура.Представление,
				   |	СвязьКузовНоменклатура.Тип,
				   |	СвязьКузовНоменклатура.Марка,
				   |	СвязьКузовНоменклатура.Модель,
				   |	СвязьКузовНоменклатура.Совместимо,
				   |	СвязьКузовНоменклатура.Тип.Код КАК ТипКод,
				   |	СвязьКузовНоменклатура.Тип.Наименование КАК ТипНаименование,
				   |	СвязьКузовНоменклатура.Марка.Код КАК МаркаКод,
				   |	СвязьКузовНоменклатура.Марка.Наименование КАК МаркаНаименование,
				   |	СвязьКузовНоменклатура.Модель.Код КАК МодельКод,
				   |	СвязьКузовНоменклатура.Модель.Наименование КАК МодельНаименование,
				   |	СвязьКузовНоменклатура.Поколение.Код КАК ПоколениеКод,
				   |	СвязьКузовНоменклатура.Поколение.Наименование КАК ПоколениеНаименование,
				   |	СвязьКузовНоменклатура.Поколение.ГодНП КАК ПоколениеГодНП,
				   |	СвязьКузовНоменклатура.Поколение.ГодОП КАК ПоколениеГодОП,
				   |	СвязьКузовНоменклатура.КузовЛегковогоАвтомобиля.Код КАК КузовЛегковогоАвтомобиляКод,
				   |	СвязьКузовНоменклатура.КузовЛегковогоАвтомобиля.Наименование КАК КузовЛегковогоАвтомобиляНаименование,
				   |	СвязьКузовНоменклатура.Кузова.Код КАК КузоваКод,
				   |	СвязьКузовНоменклатура.Кузова.Наименование КАК КузоваНаименование,
				   |	СвязьКузовНоменклатура.Модификации.Код КАК МодификацииКод,
				   |	СвязьКузовНоменклатура.Модификации.Наименование КАК МодификацииНаименование,
				   |	СвязьКузовНоменклатура.МодификацияПрочихТС.Код КАК МодификацияПрочихТСКод,
				   |	СвязьКузовНоменклатура.МодификацияПрочихТС.Наименование КАК МодификацияПрочихТСНаименование,
				   |	СвязьКузовНоменклатура.Комплектации.Код КАК КомплектацииКод,
				   |	СвязьКузовНоменклатура.Комплектации.Наименование КАК КомплектацииНаименование
				   |ИЗ
				   |	РегистрСведений.СвязьКузовНоменклатура КАК СвязьКузовНоменклатура
				   |УПОРЯДОЧИТЬ ПО
				   |	СвязьКузовНоменклатура.Номенклатура.Код";

	КоллекцияСвязей = Запрос.Выполнить().Выбрать();
	ВсегоПеренести = КоллекцияСвязей.Количество();
	ШагОповещения = Окр(ВсегоПеренести / ШаговОповещения, 0);

	НомерТекущий = 1;
	КэшНоменклатуры = Справочники.Номенклатура.ПустаяСсылка();

	Пока КоллекцияСвязей.Следующий() Цикл

		// Кэширование номенклатуры, вычисление номера строки
		Если КоллекцияСвязей.Номенклатура <> КэшНоменклатуры Тогда
			КэшНоменклатуры = КоллекцияСвязей.Номенклатура;
			НомерТекущий = 1;
		Иначе
			НомерТекущий = НомерТекущий + 1;
		КонецЕсли;

		КлючММ = ПодготовитьКлючМодели(НомерТекущий, КоллекцияСвязей);

		// Запись нового ключа модели, удаление записи из регистра
		ИскомыйКлюч = Справочники.КА2_КлючиМоделей.НайтиУникальный(КлючММ);

		НачатьТранзакцию();
		Попытка
		
			// Создание нового ключа в КА2_КлючиМоделей
			Если ИскомыйКлюч = Неопределено Тогда
				ИскомыйКлюч = Справочники.КА2_КлючиМоделей.СоздатьЭлемент();
				ИскомыйКлюч.Заполнить(КлючММ);
				ИскомыйКлюч.Записать();
			КонецЕсли;
			
			// Создание записи в регистре КА2_МоделиАвтомобилейДляНоменклатуры
			ЗаписьНаДобавление = РегистрыСведений.КА2_МоделиАвтомобилейДляНоменклатуры.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ЗаписьНаДобавление, КлючММ);
			ЗаписьНаДобавление.КлючМодели = ИскомыйКлюч.Ссылка;
			ЗаписьНаДобавление.Номер = НомерТекущий;
			ЗаписьНаДобавление.Записать(Истина);
			
			// Удаление записи из регистра СвязьКузовНоменклатура
			ЗаписьНаУдаление = РегистрыСведений.СвязьКузовНоменклатура.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ЗаписьНаУдаление, КоллекцияСвязей);
			ЗаписьНаУдаление.Удалить();

			ЗафиксироватьТранзакцию();

			// Подсчет итогов
			УспешноПеренесено = УспешноПеренесено + 1;
			
			// Информирование о прогрессе
			Если (УспешноПеренесено % ШагОповещения) Тогда
				ТекстСообщения = СтрШаблон("Заполнение ключей моделей (каталог автомобилей). Выполнено %1 из %2",
										   УспешноПеренесено,
										   ВсегоПеренести);
				ДлительныеОперации.СообщитьПрогресс(Формат(УспешноПеренесено / ВсегоПеренести * 100, "ЧЦ=3; ЧДЦ="),
													ТекстСообщения);
			КонецЕсли;

		Исключение

			ОтменитьТранзакцию();
		// TODO: Обработать ошибку записи ключа модели
		КонецПопытки;

	КонецЦикла;

	РегистрыСведений.КА2_КлючиМоделейОбновить.ВсеКлючиПодготовить();

	Возврат Истина;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НачальноеЗаполнение

Функция СоздатьДополнительныеРеквизиты(ИмяПодсистемы, КлючНастроек)

	НастройкиКаталогаАвтомобилей = КА2_КаталогАвтомобилейКлиентСервер.НастройкиКаталогаАвтомобилей();

	ИмяОтборПоКаталогуАвтомобилей = "СДР_КА2_Отбор";
	ИмяТекстПоискаМодели = "СДР_Поиск";
	ИмяМаркиМодели = "ДР_МаркиМодели";

	РеквизитПоиска = "Имя";

	НаборСсылка = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие;
	НаборОбъект = НаборСсылка.ПолучитьОбъект();

	ДополнительныеРеквизиты = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения;

	НастройкиКаталогаАвтомобилей.Вставить("ОтборПоКаталогуАвтомобилей",
										  ДополнительныеРеквизиты.НайтиПоРеквизиту(РеквизитПоиска,
																				   ИмяОтборПоКаталогуАвтомобилей));
	НастройкиКаталогаАвтомобилей.Вставить("ТекстПоискаМодели",
										  ДополнительныеРеквизиты.НайтиПоРеквизиту(РеквизитПоиска,
																				   ИмяТекстПоискаМодели));
	НастройкиКаталогаАвтомобилей.Вставить("МаркиМодели",
										  ДополнительныеРеквизиты.НайтиПоРеквизиту(РеквизитПоиска,
																				   ИмяМаркиМодели));

	Если Не ЗначениеЗаполнено(НастройкиКаталогаАвтомобилей.ОтборПоКаталогуАвтомобилей) Тогда

		ДопРеквизит = ДополнительныеРеквизиты.СоздатьЭлемент();
		ДопРеквизит.Наименование = "ОтборПоКаталогуАвтомобилей";
		ДопРеквизит.ТипЗначения = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1024));
		ДопРеквизит.Виден = Истина;
		ДопРеквизит.ДополнительныеЗначенияИспользуются = Ложь;
		ДопРеквизит.Доступен = Истина;
		ДопРеквизит.Заголовок = "Текст отбора по моделям";
		ДопРеквизит.Имя = ИмяОтборПоКаталогуАвтомобилей;
		ДопРеквизит.Подсказка = "Служебная строка для отбора по кодам марок и моделей автомобиля (Каталог автомобилей)";
		ДопРеквизит.Комментарий = "Служебная строка для отбора по кодам марок и моделей автомобиля (Каталог автомобилей)";

		Попытка
			ДопРеквизит.Записать();
			ДопРеквизитВНабор = НаборОбъект.ДополнительныеРеквизиты.Добавить();
			ДопРеквизитВНабор.Свойство = ДопРеквизит.Ссылка;
			НастройкиКаталогаАвтомобилей.Вставить("ОтборПоКаталогуАвтомобилей", ДопРеквизит.Ссылка);
		Исключение
			Возврат Ложь;
		КонецПопытки;

	КонецЕсли;

	Если Не ЗначениеЗаполнено(НастройкиКаталогаАвтомобилей.ТекстПоискаМодели) Тогда

		ДопРеквизит = ДополнительныеРеквизиты.СоздатьЭлемент();
		ДопРеквизит.Наименование = "ТекстПоискаМодели";
		ДопРеквизит.ТипЗначения = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1024));
		ДопРеквизит.Виден = Истина;
		ДопРеквизит.ДополнительныеЗначенияИспользуются = Ложь;
		ДопРеквизит.Доступен = Истина;
		ДопРеквизит.Заголовок = "Текст поиска модели";
		ДопРеквизит.Имя = ИмяТекстПоискаМодели;
		ДопРеквизит.Подсказка = "Служебная строка для поиска по кодам марок и моделей автомобиля на сайте (Каталог автомобилей)";
		ДопРеквизит.Комментарий = "Служебная строка для поиска по кодам марок и моделей автомобиля на сайте (Каталог автомобилей)";

		Попытка
			ДопРеквизит.Записать();
			ДопРеквизитВНабор = НаборОбъект.ДополнительныеРеквизиты.Добавить();
			ДопРеквизитВНабор.Свойство = ДопРеквизит.Ссылка;
			НастройкиКаталогаАвтомобилей.Вставить("ТекстПоискаМодели", ДопРеквизит.Ссылка);
		Исключение
			Возврат Ложь;
		КонецПопытки;

	КонецЕсли;

	Если Не ЗначениеЗаполнено(НастройкиКаталогаАвтомобилей.МаркиМодели) Тогда

		ДопРеквизит = ДополнительныеРеквизиты.СоздатьЭлемент();
		ДопРеквизит.Наименование = "МаркиМодели";
		ДопРеквизит.ТипЗначения = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(1024));
		ДопРеквизит.Виден = Истина;
		ДопРеквизит.ДополнительныеЗначенияИспользуются = Ложь;
		ДопРеквизит.Доступен = Истина;
		ДопРеквизит.Заголовок = "Марки, модели";
		ДопРеквизит.Имя = ИмяМаркиМодели;
		ДопРеквизит.Подсказка = "Служебная строка для формирования наименования номенклатуры (Каталог автомобилей)";
		ДопРеквизит.Комментарий = "Служебная строка для формирования наименования номенклатуры (Каталог автомобилей)";

		Попытка
			ДопРеквизит.Записать();
			ДопРеквизитВНабор = НаборОбъект.ДополнительныеРеквизиты.Добавить();
			ДопРеквизитВНабор.Свойство = ДопРеквизит.Ссылка;
			НастройкиКаталогаАвтомобилей.Вставить("МаркиМодели", ДопРеквизит.Ссылка);
		Исключение
			Возврат Ложь;
		КонецПопытки;

	КонецЕсли;

	Если НаборОбъект.Модифицированность() Тогда
		Попытка
			НаборОбъект.Записать();
		Исключение
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ИмяПодсистемы, КлючНастроек, НастройкиКаталогаАвтомобилей);

	Возврат Истина;

КонецФункции

#КонецОбласти

#Область КлючиМоделей

Функция ПодготовитьКлючМодели(НомерТекущий, КоллекцияСвязей) Экспорт

	// Заполнение части данных для нового ключа
	КлючММ = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Марка, МаркаНаименование, Модель, МодельНаименование, Поколение, Кузов, Модификация, Комплектация, Совместимо, НомерСтроки");
	КлючММ.Вставить("Номенклатура", КоллекцияСвязей.Номенклатура);
	КлючММ.Вставить("ХарактеристикаНоменклатуры", КоллекцияСвязей.Характеристика);
	КлючММ.Вставить("Совместимо", Не КоллекцияСвязей.Совместимо);
	КлючММ.Вставить("НомерСтроки", НомерТекущий);

	Если ЗначениеЗаполнено(КоллекцияСвязей.Тип) Тогда
		ОбработатьТипТС(КлючММ, КоллекцияСвязей);
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.Марка) Тогда
		ОбработатьМаркуТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Марка", Справочники.КА2_Марки.ПустаяСсылка());
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.Модель) Тогда
		ОбработатьМодельТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Модель", Справочники.КА2_Модели.ПустаяСсылка());
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.Поколение) Тогда
		ОбработатьПоколениеТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Поколение", Справочники.КА2_Поколения.ПустаяСсылка());
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.КузовЛегковогоАвтомобиля) Или ЗначениеЗаполнено(КоллекцияСвязей.Кузова) Тогда
		ОбработатьКузовТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Кузов", Справочники.КА2_Кузова.ПустаяСсылка());
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.Модификации) Или ЗначениеЗаполнено(КоллекцияСвязей.МодификацияПрочихТС) Тогда
		ОбработатьМодификациюТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Модификация", Справочники.КА2_Модификации.ПустаяСсылка());
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.Комплектации) Тогда
		ОбработатьКомплектациюТС(КлючММ, КоллекцияСвязей);
	Иначе
		КлючММ.Вставить("Комплектация", Справочники.КА2_Комплектации.ПустаяСсылка());
	КонецЕсли;

	Возврат КлючММ;

КонецФункции

Процедура ОбработатьКомплектациюТС(КлючММ, КоллекцияСвязей)

	Комплектация = Новый Структура;
	Комплектация.Вставить("Код", КоллекцияСвязей.КомплектацииКод);
	Комплектация.Вставить("Наименование", КоллекцияСвязей.КомплектацииНаименование);
	Комплектация.Вставить("id_car_modification", КоллекцияСвязей.МодификацииКод);
	Комплектация.Вставить("id_car_type", КоллекцияСвязей.ТипКод);

	ИскомаяКомплектация = Справочники.КА2_Комплектации.НайтиПоКоду(КоллекцияСвязей.КомплектацииКод);

	Если ЗначениеЗаполнено(ИскомаяКомплектация) Тогда
		КлючММ.Вставить("Комплектация", ИскомаяКомплектация);
	Иначе
		ИскомаяКомплектация = Справочники.КА2_Комплектации.СоздатьЭлемент();
		ИскомаяКомплектация.Заполнить(Комплектация);
		Попытка
			ИскомаяКомплектация.Записать();
			КлючММ.Вставить("Комплектация", ИскомаяКомплектация.Ссылка);
		Исключение
		// TODO: Обработать ошибку записи комплектации
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьМодификациюТС(КлючММ, КоллекцияСвязей)

	Модификация = Новый Структура;
	Модификация.Вставить("id_car_model", КоллекцияСвязей.МодельКод);
	Модификация.Вставить("id_car_type", КоллекцияСвязей.ТипКод);

	Если ЗначениеЗаполнено(КоллекцияСвязей.Модификации) Тогда
		Модификация.Вставить("Код", КоллекцияСвязей.МодификацииКод);
		Модификация.Вставить("Наименование", КоллекцияСвязей.МодификацииНаименование);
		Модификация.Вставить("id_car_serie", КоллекцияСвязей.КузовЛегковогоАвтомобиляКод);
	Иначе
		Модификация.Вставить("Код", КоллекцияСвязей.МодификацияПрочихТСКод);
		Модификация.Вставить("Наименование", КоллекцияСвязей.МодификацияПрочихТСНаименование);
		Модификация.Вставить("id_car_serie", КоллекцияСвязей.КузоваКод);
	КонецЕсли;

	ИскомаяМодификация = Справочники.КА2_Модификации.НайтиПоКоду(Модификация.Код);

	Если Не ЗначениеЗаполнено(ИскомаяМодификация) Тогда
		ИскомаяМодификация = Справочники.КА2_Модификации.СоздатьЭлемент();
		ИскомаяМодификация.Заполнить(Модификация);
		Попытка
			ИскомаяМодификация.Записать();
			КлючММ.Вставить("Модификация", ИскомаяМодификация.Ссылка);
		Исключение
		// TODO: Обработать ошибку записи модификации
		КонецПопытки;
	Иначе
		КлючММ.Вставить("Модификация", ИскомаяМодификация);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьКузовТС(КлючММ, КоллекцияСвязей)

	Кузова = Новый Структура;
	Кузова.Вставить("id_car_type", КоллекцияСвязей.ТипКод);
	Кузова.Вставить("id_car_model", КоллекцияСвязей.МодельКод);
	Если ЗначениеЗаполнено(КоллекцияСвязей.ПоколениеКод) Тогда
		Кузова.Вставить("id_car_generation", КоллекцияСвязей.ПоколениеКод);
	КонецЕсли;

	Если ЗначениеЗаполнено(КоллекцияСвязей.КузовЛегковогоАвтомобиля) Тогда
		Кузова.Вставить("Код", КоллекцияСвязей.КузовЛегковогоАвтомобиляКод);
		Кузова.Вставить("Наименование", КоллекцияСвязей.КузовЛегковогоАвтомобиляНаименование);
	Иначе
		Кузова.Вставить("Код", КоллекцияСвязей.КузоваКод);
		Кузова.Вставить("Наименование", КоллекцияСвязей.КузоваНаименование);
	КонецЕсли;

	ИскомыйКузов = Справочники.КА2_Кузова.НайтиПоКоду(Кузова.Код);

	Если Не ЗначениеЗаполнено(ИскомыйКузов) Тогда
		ИскомыйКузов = Справочники.КА2_Кузова.СоздатьЭлемент();
		ИскомыйКузов.Заполнить(Кузова);
		Попытка
			ИскомыйКузов.Записать();
			КлючММ.Вставить("Кузов", ИскомыйКузов.Ссылка);
		Исключение
		// TODO: Обработать ошибку записи кузова
		КонецПопытки;
	Иначе
		КлючММ.Вставить("Кузов", ИскомыйКузов);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьПоколениеТС(КлючММ, КоллекцияСвязей)

	Поколение = Новый Структура;
	Поколение.Вставить("Код", КоллекцияСвязей.ПоколениеКод);
	Поколение.Вставить("Наименование", КоллекцияСвязей.ПоколениеНаименование);
	Поколение.Вставить("year_begin", КоллекцияСвязей.ПоколениеГодНП);
	Поколение.Вставить("year_end", КоллекцияСвязей.ПоколениеГодОП);
	Поколение.Вставить("id_car_model", КоллекцияСвязей.МодельКод);
	Поколение.Вставить("id_car_type", КоллекцияСвязей.ТипКод);
	ИскомоеПоколение = Справочники.КА2_Поколения.НайтиПоКоду(КоллекцияСвязей.ПоколениеКод);

	Если Не ЗначениеЗаполнено(ИскомоеПоколение) Тогда
		ИскомоеПоколение = Справочники.КА2_Поколения.СоздатьЭлемент();
		ИскомоеПоколение.Заполнить(Поколение);
		Попытка
			ИскомоеПоколение.Записать();
			КлючММ.Вставить("Поколение", ИскомоеПоколение.Ссылка);
		Исключение
		// TODO: Обработать ошибку записи модели
		КонецПопытки;
	Иначе
		КлючММ.Вставить("Поколение", ИскомоеПоколение);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработатьМодельТС(КлючММ, КоллекцияСвязей)

	Модель = Новый Структура;
	Модель.Вставить("Код", КоллекцияСвязей.МодельКод);
	Модель.Вставить("Наименование", КоллекцияСвязей.МодельНаименование);
	Модель.Вставить("id_car_mark", КоллекцияСвязей.МаркаКод);
	Модель.Вставить("id_car_type", КоллекцияСвязей.ТипКод);

	ИскомаяМодель = Справочники.КА2_Модели.НайтиПоКоду(КоллекцияСвязей.МодельКод);

	Если Не ЗначениеЗаполнено(ИскомаяМодель) Тогда
		ИскомаяМодель = Справочники.КА2_Модели.СоздатьЭлемент();
		ИскомаяМодель.Заполнить(Модель);
		Попытка
			ИскомаяМодель.Записать();
			КлючММ.Вставить("Модель", ИскомаяМодель.Ссылка);
			КлючММ.Вставить("МодельНаименование", ИскомаяМодель.Владелец);
		Исключение
		// TODO: Обработать ошибку записи модели
		КонецПопытки;
	Иначе
		КлючММ.Вставить("Модель", ИскомаяМодель);
		КлючММ.Вставить("МодельНаименование", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИскомаяМодель,
																						 "Владелец").Владелец);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьМаркуТС(КлючММ, КоллекцияСвязей)

	Марка = Новый Структура;
	Марка.Вставить("Код", КоллекцияСвязей.МаркаКод);
	Марка.Вставить("Наименование", КоллекцияСвязей.МаркаНаименование);
	Марка.Вставить("id_car_type", КоллекцияСвязей.ТипКод);

	ИскомаяМарка = Справочники.КА2_Марки.НайтиПоКоду(КоллекцияСвязей.МаркаКод);

	Если Не ЗначениеЗаполнено(ИскомаяМарка) Тогда
		ИскомаяМарка = Справочники.КА2_Марки.СоздатьЭлемент();
		ИскомаяМарка.Заполнить(Марка);
		Попытка
			ИскомаяМарка.Записать();
			КлючММ.Вставить("Марка", ИскомаяМарка.Ссылка);
			КлючММ.Вставить("МаркаНаименование", ИскомаяМарка.Владелец);
		Исключение
		// TODO: Обработать ошибку записи марки
		КонецПопытки;
	Иначе
		КлючММ.Вставить("Марка", ИскомаяМарка);
		КлючММ.Вставить("МаркаНаименование", ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИскомаяМарка,
																						"Владелец").Владелец);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьТипТС(КлючММ, КоллекцияСвязей)

	ТипТС = Новый Структура;
	ТипТС.Вставить("Код", КоллекцияСвязей.ТипКод);
	ТипТС.Вставить("Наименование", КоллекцияСвязей.ТипНаименование);
	ИскомыйТипТС = Справочники.КА2_Типы.НайтиПоКоду(ТипТС.Код);

	Если Не ЗначениеЗаполнено(ИскомыйТипТС) Тогда
		ИскомыйТипТС = Справочники.КА2_Типы.СоздатьЭлемент();
		ИскомыйТипТС.Заполнить(ТипТС);
		Попытка
			ИскомыйТипТС.Записать();
			КлючММ.Вставить("ТипТС", ИскомыйТипТС.Ссылка);
		Исключение
			Сообщить("Ошибка записи типа ТС - " + ТипТС.Наименование + "/" + ТипТС.Код);
		КонецПопытки;
	Иначе
		КлючММ.Вставить("ТипТС", ИскомыйТипТС);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область РегистрКА2_КлючиМоделейОбновить

Процедура ЗаполнитьРегистрКА2_КлючиМоделейОбновить() Экспорт

	// Заполнение регистра обновлений
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
				   |	КА2_КлючиМоделей.Ссылка
				   |ИЗ
				   |	Справочник.КА2_КлючиМоделей КАК КА2_КлючиМоделей";
	ВРегистрОбновлений = Запрос.Выполнить().Выбрать();

	КлючиМоделейНаборЗаписей = РегистрыСведений.КА2_КлючиМоделейОбновить.СоздатьНаборЗаписей();

	Пока ВРегистрОбновлений.Следующий() Цикл
		НоваяЗапись = КлючиМоделейНаборЗаписей.Добавить();
		НоваяЗапись.КлючМодели = ВРегистрОбновлений.Ссылка;
	КонецЦикла;

	Если КлючиМоделейНаборЗаписей.Количество() > 0 Тогда
		КлючиМоделейНаборЗаписей.Записать(Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти