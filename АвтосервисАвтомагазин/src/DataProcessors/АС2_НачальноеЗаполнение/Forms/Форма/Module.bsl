//
//	Филимонов И.В.
//		+7 913 240 81 77
//		
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереносРесурсов(Команда)
	ПереносРесурсовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереносАвтомобилей(Команда)
	ПереносАвтомобилейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереносЗаказНарядов(Команда)
	ПереносЗаказНарядовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПереносРасписания(Команда)
	ПереносРасписанияНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПереносРесурсовНаСервере()

	Сообщение = Новый СообщениеПользователю;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КА_Ресурсы.Код КАК Код,
				   |	КА_Ресурсы.Наименование КАК Наименование,
				   |	КА_Ресурсы.Календарь КАК Календарь
				   |ИЗ
				   |	Справочник.КА_Ресурсы КАК КА_Ресурсы
				   |ГДЕ
				   |	КА_Ресурсы.ПометкаУдаления = ЛОЖЬ
				   |
				   |УПОРЯДОЧИТЬ ПО
				   |	Код";
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		НайденРесурс = Справочники.АС2_Ресурсы.НайтиПоКоду(Выборка.Код);

		Если НайденРесурс.Пустая() Тогда

			НовыйРесурс = Справочники.АС2_Ресурсы.СоздатьЭлемент();
			НовыйРесурс.Заполнить(Неопределено);
			НовыйРесурс.Код = Выборка.Код;
			НовыйРесурс.Наименование = Выборка.Наименование;
			НовыйРесурс.Календарь = Выборка.Календарь;

			Попытка
				НовыйРесурс.Записать();
			Исключение
				Сообщение.Текст = "Ошибка создания ресурса.
								  |" + ОписаниеОшибки();
				Сообщение.Сообщить();
			КонецПопытки;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереносАвтомобилейНаСервере()

	Сообщение = Новый СообщениеПользователю;

	// Создание автомобилей клиентов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	КА_АвтомобилиКлиентов.Владелец КАК Владелец,
				   |	КА_АвтомобилиКлиентов.Код КАК Код,
				   |	КА_АвтомобилиКлиентов.Наименование КАК Наименование,
				   |	КА_АвтомобилиКлиентов.РегистрационныйЗнак КАК РегистрационныйЗнак,
				   |	КА_АвтомобилиКлиентов.Тип.Код КАК ТипКод,
				   |	КА_АвтомобилиКлиентов.Марка.Код КАК МаркаКод,
				   |	КА_АвтомобилиКлиентов.Модель.Код КАК МодельКод,
				   |	КА_АвтомобилиКлиентов.Поколение.Код КАК ПоколениеКод,
				   |	КА_АвтомобилиКлиентов.Кузов.Код КАК КузовКод,
				   |	КА_АвтомобилиКлиентов.Модификация.Код КАК МодификацияКод,
				   |	КА_АвтомобилиКлиентов.Комплектация.Код КАК КомплектацияКод,
				   |	КА_АвтомобилиКлиентов.ГодВыпуска КАК ГодВыпуска,
				   |	КА_АвтомобилиКлиентов.Примечания КАК Примечания,
				   |	ЕСТЬNULL(КА2_Комплектации.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Комплектации.ПустаяСсылка)) КАК Комплектация,
				   |	ЕСТЬNULL(КА2_Кузова.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Кузова.ПустаяСсылка)) КАК Кузов,
				   |	ЕСТЬNULL(КА2_Марки.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Марки.ПустаяСсылка)) КАК Марка,
				   |	ЕСТЬNULL(КА2_Модели.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Модели.ПустаяСсылка)) КАК Модель,
				   |	ЕСТЬNULL(КА2_Модификации.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Модификации.ПустаяСсылка)) КАК Модификация,
				   |	ЕСТЬNULL(КА2_Поколения.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Поколения.ПустаяСсылка)) КАК Поколение,
				   |	ЕСТЬNULL(КА2_Типы.Ссылка, ЗНАЧЕНИЕ(Справочник.КА2_Типы.ПустаяСсылка)) КАК Тип
				   |ИЗ
				   |	Справочник.КА_АвтомобилиКлиентов КАК КА_АвтомобилиКлиентов
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Типы КАК КА2_Типы
				   |		ПО КА2_Типы.Код = КА_АвтомобилиКлиентов.Тип.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Марки КАК КА2_Марки
				   |		ПО КА2_Марки.Код = КА_АвтомобилиКлиентов.Марка.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Комплектации КАК КА2_Комплектации
				   |		ПО КА2_Комплектации.Код = КА_АвтомобилиКлиентов.Марка.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Модели КАК КА2_Модели
				   |		ПО КА2_Модели.Код = КА_АвтомобилиКлиентов.Модель.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Поколения КАК КА2_Поколения
				   |		ПО КА2_Поколения.Код = КА_АвтомобилиКлиентов.Поколение.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Кузова КАК КА2_Кузова
				   |		ПО КА2_Кузова.Код = КА_АвтомобилиКлиентов.Кузов.Код
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КА2_Модификации КАК КА2_Модификации
				   |		ПО КА2_Модификации.Код = КА_АвтомобилиКлиентов.Модификация.Код
				   |ГДЕ
				   |	КА_АвтомобилиКлиентов.ПометкаУдаления = ЛОЖЬ";
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		НовыйАвто = Справочники.АС2_АвтомобилиКлиентов.СоздатьЭлемент();
		НовыйАвто.Заполнить(Неопределено);
		ЗаполнитьЗначенияСвойств(НовыйАвто, Выборка);

		Попытка
			НовыйАвто.Записать();
		Исключение
			Сообщение.Текст = "Ошибка создания автомобиля.
							  |" + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;

	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереносЗаказНарядовНаСервере()

	Сообщение = Новый СообщениеПользователю;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ЗаказКлиента.Ссылка КАК Ссылка,
				   |	ЗаказКлиента.Автомобиль.Владелец КАК Владелец,
				   |	ЗаказКлиента.Автомобиль.Код КАК Код,
				   |	ЗаказКлиента.Автомобиль.Наименование КАК Наименование,
				   |	ЗаказКлиента.Автомобиль.РегистрационныйЗнак КАК РегистрационныйЗнак,
				   |	ЕСТЬNULL(АС2_АвтомобилиКлиентов.Ссылка, ЗНАЧЕНИЕ(Справочник.АС2_АвтомобилиКлиентов.ПустаяСсылка)) КАК
				   |		АвтомобильКлиента
				   |ИЗ
				   |	Документ.ЗаказКлиента КАК ЗаказКлиента
				   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АС2_АвтомобилиКлиентов КАК АС2_АвтомобилиКлиентов
				   |		ПО АС2_АвтомобилиКлиентов.Владелец = ЗаказКлиента.Автомобиль.Владелец
				   |		И АС2_АвтомобилиКлиентов.Код = ЗаказКлиента.Автомобиль.Код
				   |		И АС2_АвтомобилиКлиентов.Наименование = ЗаказКлиента.Автомобиль.Наименование
				   |		И АС2_АвтомобилиКлиентов.РегистрационныйЗнак = ЗаказКлиента.Автомобиль.РегистрационныйЗнак
				   |ГДЕ
				   |	ЗаказКлиента.ЭтоЗаказНаряд = ИСТИНА
				   |	И ЗаказКлиента.Проведен = ИСТИНА
				   |	И ЗаказКлиента.АС2_ЭтоЗаказКлиента = ЛОЖЬ";

	Выборка = Запрос.Выполнить().Выбрать();

	ВсегоЗаказов = Выборка.Количество();
	
	// Запрос для подбора автомобиля
	Пока Выборка.Следующий() Цикл

		Заказ = Выборка.Ссылка.ПолучитьОбъект();
		Заказ.АС2_ЭтоЗаказКлиента = Истина;
		Заказ.АС2_АвтомобильКлиента = Выборка.АвтомобильКлиента;

		Попытка
			Заказ.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Сообщение.Текст = "Ошибка проведения документа " + Строка(Заказ) + Символы.ПС + ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;

	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереносРасписанияНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КА_ЗагрузкаРесурсов.ЗаказКлиента КАК ЗаказКлиента,
	|	КА_ЗагрузкаРесурсов.Начало КАК Начало,
	|	КА_ЗагрузкаРесурсов.Окончание КАК Окончание,
	|	КА_ЗагрузкаРесурсов.СтатусЗаказаКлиента КАК СтатусЗаказаКлиента,
	|	КА_ЗагрузкаРесурсов.ИмяОбласти КАК ИмяОбласти,
	|	КА_ЗагрузкаРесурсов.Комментарий КАК Комментарий,
	|	КА_ЗагрузкаРесурсов.Идентификатор КАК Идентификатор,
	|	КА_ЗагрузкаРесурсов.ВРаботе КАК ВРаботе,
	|	ЕСТЬNULL(АС2_АвтомобилиКлиентов.Ссылка, ЗНАЧЕНИЕ(Справочник.АС2_АвтомобилиКлиентов.ПустаяСсылка)) КАК Автомобиль,
	|	АС2_Ресурсы.Ссылка КАК Ресурс
	|ИЗ
	|	РегистрСведений.КА_ЗагрузкаРесурсов КАК КА_ЗагрузкаРесурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АС2_АвтомобилиКлиентов КАК АС2_АвтомобилиКлиентов
	|		ПО АС2_АвтомобилиКлиентов.Владелец = КА_ЗагрузкаРесурсов.Автомобиль.Владелец
	|		И АС2_АвтомобилиКлиентов.Код = КА_ЗагрузкаРесурсов.Автомобиль.Код
	|		И АС2_АвтомобилиКлиентов.Наименование = КА_ЗагрузкаРесурсов.Автомобиль.Наименование
	|		И АС2_АвтомобилиКлиентов.РегистрационныйЗнак = КА_ЗагрузкаРесурсов.Автомобиль.РегистрационныйЗнак
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АС2_Ресурсы КАК АС2_Ресурсы
	|		ПО АС2_Ресурсы.Код = КА_ЗагрузкаРесурсов.Ресурс.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	Начало";
	Выборка = Запрос.Выполнить().Выбрать();

	ВсегоЗаписей = Выборка.Количество();

	Пока Выборка.Следующий() Цикл

		НоваяЗапись = РегистрыСведений.АС2_ЗагрузкаРесурсов.СоздатьМенеджерЗаписи();
		НоваяЗапись.Заполнить(Неопределено);
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);

		НоваяЗапись.Записать(Истина);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти